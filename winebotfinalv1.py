–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —É–ª—É—á—à–µ–Ω–∏—è:
1. –ü—Ä–æ–±–ª–µ–º–∞ —Å threading.Thread –∏ asyncio.run()
–í–∞—à –∫–æ–¥ –∑–∞–ø—É—Å–∫–∞–µ—Ç keep_alive() –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ —á–µ—Ä–µ–∑ asyncio.run(), –Ω–æ —ç—Ç–æ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ –≤–Ω—É—Ç—Ä–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.

–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:
–õ—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å asyncio.create_task() –ø—Ä—è–º–æ –≤ main():

python
async def main():
    if not QUESTIONS:
        print("–û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã.")
        return

    asyncio.create_task(keep_alive())  # ‚úÖ –ó–∞–ø—É—Å–∫ keep_alive –∫–∞–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏
    await start_web_server()
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    await dp.start_polling(bot)
2. –ù–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞
–ï—Å–ª–∏ –±–æ—Ç –ø–∞–¥–∞–µ—Ç, Render –º–æ–∂–µ—Ç –Ω–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.

–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:

–î–æ–±–∞–≤—å—Ç–µ try-except –≤ main():

python
async def main():
    try:
        if not QUESTIONS:
            print("–û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã.")
            return

        asyncio.create_task(keep_alive())
        await start_web_server()
        print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        await dp.start_polling(bot)
    except Exception as e:
        print(f"üö® –ë–æ—Ç —É–ø–∞–ª: {e}")
        # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É
3. –í–æ–ø—Ä–æ—Å—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
–ï—Å–ª–∏ questions.json –∏–∑–º–µ–Ω–∏—Ç—Å—è, –±–æ—Ç –Ω–µ –æ–±–Ω–æ–≤–∏—Ç –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞.

–†–µ—à–µ–Ω–∏–µ:

–î–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é reload_questions() –∏ –≤—ã–∑—ã–≤–∞—Ç—å –µ—ë –ø–æ –∫–æ–º–∞–Ω–¥–µ /reload (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ).

4. –ù–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã questions.json
–ï—Å–ª–∏ –≤ JSON –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–æ–ª—è (–Ω–µ—Ç "answer", "options" –∏ —Ç.–¥.), –±–æ—Ç –º–æ–∂–µ—Ç —Å–ª–æ–º–∞—Ç—å—Å—è.

–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:

–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:

python
def validate_question(question):
    required_fields = ["question", "type"]
    if not all(field in question for field in required_fields):
        return False
    if question["type"] == "quiz" and "correct_index" not in question:
        return False
    return True

# –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:
QUESTIONS = [q for q in QUESTIONS if validate_question(q)]
